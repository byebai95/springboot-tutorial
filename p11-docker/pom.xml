<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>springboot-tutorial</artifactId>
        <groupId>org.example</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>p11-docker</artifactId>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <!--spring web starter-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.1.4.RELEASE</version>
        </dependency>

    </dependencies>


    <build>
        <plugins>
            <!--  docker 插件  -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>

                <!--  绑定 docker:build 到 maven 的 package 生命周期  -->
                <executions>
                    <execution>
                        <id>docker-build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>

                <!--  插件的配置  -->
                <configuration>
                    <!--  构建的镜像的名字 ：标签  -->
                    <imageName>${project.artifactId}:${project.version}</imageName>
                    <!--  存放dockerfile的路径  -->
                    <dockerDirectory>${project.basedir}</dockerDirectory>
                    <!--  docker Host 地址，用插件在 initialize 阶段从 application.yml 解析  -->
                    <dockerHost>http://81.68.206.246:2375</dockerHost>
                    <!--  SSL 认证证书地址，若开启 SSL 登录  -->
                    <!--  <dockerCertPath></dockerCertPath>  -->
                    <resources>
                        <resource>
                            <!--  使用什么资源来构建镜像（就是jar包），以及将镜像推送到容器的那个目录下  -->
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>